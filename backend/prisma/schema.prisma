// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// prisma/schema.prisma

model User {
  id               Int              @id @default(autoincrement())
  fullName         String
  email            String           @unique
  password         String
  bio              String           @default("")
  profilePic       String           @default("")
  nativeLanguage   String           @default("")
  learningLanguage String           @default("")
  location         String           @default("")
  isOnboarded      Boolean          @default(false)
  friends          User[]           @relation("UserFriends")
  friendOf         User[]           @relation("UserFriends")
  sentRequests     FriendRequest[]  @relation("SentRequests")
  receivedRequests FriendRequest[]  @relation("ReceivedRequests")
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}

model FriendRequest {
  id          Int                  @id @default(autoincrement())
  sender      User                 @relation("SentRequests", fields: [senderId], references: [id])
  senderId    Int
  recipient   User                 @relation("ReceivedRequests", fields: [recipientId], references: [id])
  recipientId Int
  status      FriendRequestStatus  @default(pending)
  createdAt   DateTime             @default(now())
  updatedAt   DateTime             @updatedAt
}

enum FriendRequestStatus {
  pending
  accepted
}
